server:
  port: 8087

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://101.42.251.133:3308/aurora?serverTimezone=Asia/Shanghai&allowMultiQueries=true
    username: root
    password: Hh032913
    hikari:
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 连接池名称
      pool-name: MyHikariCP
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 60000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  # redis配置
  redis:
    host: 101.42.251.133
    port: 6379
    password: root
    database: 2
    lettuce:
      pool:
        max-idle: 30
        max-active: 8
        max-wait: 10000
        min-idle: 10

  # rabbitmq配置
  rabbitmq:
    host: 101.42.251.133
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3 #最大重试次数
          initial-interval: 3000 #重试间隔时间（单位毫秒）
        prefetch: 1 # 每次只能获取一条消息，处理完成才能获取下一个消息
  elasticsearch:
    rest:
      uris: 101.42.251.133:9200
  # 配置邮箱
  mail:
    host: smtp.163.com
    username: 邮箱
    password: 密码
    default-encoding: UTF-8
    protocol: smtp
    port: 465
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            port: 465
          ssl:
            enable: true
          starttls:
            enable: true
            required: true
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

search:
  mode: elasticsearch

upload:
  mode: qiniu
  oss:
    url: http://Bucket域名/
    endpoint: OSS配置endpoint
    accessKeyId: OSS配置accessKeyId
    accessKeySecret: OSS配置accessKeySecret
    bucketName: OSS配置bucketName
  minio:
    url: http://101.42.251.133:9000/
    endpoint: http://101.42.251.133:9000
    accesskey: rcsAoyRD9U36vMlJ
    secretKey: BYzsf8JMCO6SoyhGydNKsSRQKlcGahMg
    bucketName: blog-aurora
  qiniu:
    accesskey: 2M6l1-mzieb6UukwqAllKdibiHUIEgbfrJPl-2c8
    secretKey: XtxfSwC7IQQV8EceBmQ3XtF-CMNAJw7cSlepEjW4
    bucketName: blog-aurora
    url: http://qiniu.hhbs.top/

website:
  url: http://www.hhbs.top

qq:
  app-id: QQ APPID
  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}
